class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    Node first;
    Node last;

    // Menambahkan elemen di akhir linked list
    void add(int data) {
        Node newNode = new Node(data);
        if (first == null) {
            first = last = newNode;
        } else {
            last.next = newNode;
            last = newNode;
        }
    }

    // Method untuk memperbarui nilai dalam linked list
    void update(int dataLama, int dataBaru) {
        Node current = first;
        while (current != null) {
            if (current.data == dataLama) {
                current.data = dataBaru;
                return; // Keluar setelah memperbarui data pertama yang ditemukan
            }
            current = current.next;
        }
    }

    // Menampilkan elemen dalam linked list
    void display() {
        Node current = first;
        while (current != null) {
            System.out.print(current.data + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
}

public class Main {
    public static void main(String[] args) {
        LinkedList list = new LinkedList();

        // Inisialisasi linked list awal
        list.add(2);
        list.add(23);
        list.add(56);
        list.add(7);
        list.add(12);

        // Menampilkan sebelum update
        System.out.println("Sebelum update:");
        list.display();

        // Memperbarui data (mengubah 56 menjadi 80)
        list.update(56, 80);

        // Menampilkan setelah update
        System.out.println("Setelah update (56 -> 80):");
        list.display();
    }
}
